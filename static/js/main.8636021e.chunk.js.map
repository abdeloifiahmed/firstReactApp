{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/layout/About.js","components/layout/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","react_default","a","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","console","log","showOnClick","_this$props","name","address","telephone","email","className","style","border","padding","cursor","onClick","bind","Link","to","Contacts","contacts_Contact","AddContact","onSubmit","e","preventDefault","_this$state","newContact","post","history","push","onChange","defineProperty","target","_this$state2","required","htmlFor","updContact","match","params","put","phone","street","_this3","Header","href","About","NotFound","App","Context_Provider","BrowserRouter","basename","process","Switch","Route","exact","path","component","EditContact","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8636021e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => this.setState({ contacts: res.data }));\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = (id, dispatch) => {\n    axios\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n      .then(res => {\n        dispatch({ type: \"DELETE_CONTACT\", payload: id });\n        console.log(res.data);\n      });\n  };\n\n  showOnClick = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  render() {\n    const { id, name, address, telephone, email } = this.props;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => (\n          <div className=\"row\">\n            <div className=\"col s4\">\n              <h4 style={{ border: \"1px solid black\", padding: \"0.5rem\" }}>\n                {name}\n                <i\n                  style={{ cursor: \"pointer\" }}\n                  onClick={this.showOnClick}\n                  className=\"material-icons\"\n                >\n                  arrow_drop_down\n                </i>\n                <i\n                  className=\"material-icons secondary-content red-text\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    id,\n                    value.dispatch,\n                    value\n                  )}\n                >\n                  close\n                </i>\n                <Link to={`contact/edit/${id}`}>\n                  <i className=\"material-icons secondary-content\">edit</i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"collection\">\n                  <li className=\"collection-item\">Email: {email}</li>\n                  <li className=\"collection-item\">Telefoon: {telephone}</li>\n                  <li className=\"collection-item\">Adres: {address}</li>\n                </ul>\n              ) : null}\n            </div>\n          </div>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../Context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => (\n          <div>\n            <h3>\n              <span className=\"red-text\">Contact </span>List\n            </h3>\n            {value.contacts.map(contact => (\n              <Contact\n                key={contact.id}\n                id={contact.id}\n                name={contact.name}\n                email={contact.email}\n                telephone={contact.telephone}\n                address={contact.address}\n              />\n            ))}\n          </div>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    telephone: \"\",\n    address: \"\"\n  };\n\n  onSubmit = (dispatch, e) => {\n    e.preventDefault();\n    const { email, telephone, name, address } = this.state;\n\n    const newContact = {\n      name,\n      telephone,\n      email,\n      address\n    };\n\n    axios\n      .post(\"https://jsonplaceholder.typicode.com/users/\", newContact)\n      .then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\n\n    this.setState({\n      name: \"\",\n      telephone: \"\",\n      email: \"\",\n      address: \"\"\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.id]: e.target.value });\n\n  render() {\n    const { name, email, telephone, address } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className=\"row\">\n              <div className=\"col s12 m6\">\n                <div className=\"card grey lighten-2\">\n                  <span className=\"card-title\">Add Contact</span>\n                  <div className=\"card-content\">\n                    <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\n                      <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                          <input\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"validate\"\n                            value={name}\n                            onChange={this.onChange}\n                            required\n                          />\n                          <label htmlFor=\"name\">First Name</label>\n                        </div>\n                        <div className=\"input-field col s12\">\n                          <input\n                            id=\"email\"\n                            type=\"email\"\n                            className=\"validate\"\n                            value={email}\n                            onChange={this.onChange}\n                            required\n                          />\n                          <label htmlFor=\"email\">Email</label>\n                        </div>\n                        <div className=\"input-field col s12\">\n                          <input\n                            id=\"telephone\"\n                            type=\"text\"\n                            className=\"validate\"\n                            value={telephone}\n                            onChange={this.onChange}\n                            required\n                          />\n                          <label htmlFor=\"telephone\">Phone</label>\n                        </div>\n                        <div className=\"input-field col s12\">\n                          <input\n                            id=\"address\"\n                            type=\"text\"\n                            className=\"validate\"\n                            value={address}\n                            onChange={this.onChange}\n                            required\n                          />\n                          <label htmlFor=\"address\">Address</label>\n                        </div>\n                      </div>\n                      <input type=\"submit\" className=\"btn\" />\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    telephone: \"\",\n    address: \"\"\n  };\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    axios.get(`https://jsonplaceholder.typicode.com/users/${id}`).then(data => {\n      const contact = data.data;\n      this.setState({\n        name: contact.name,\n        email: contact.email,\n        telephone: contact.phone,\n        address: contact.address.street\n      });\n    });\n  }\n\n  onSubmit = (dispatch, e) => {\n    e.preventDefault();\n    const { email, telephone, name, address } = this.state;\n\n    this.setState({\n      name: \"\",\n      telephone: \"\",\n      email: \"\",\n      address: \"\"\n    });\n\n    const updContact = {\n      name,\n      email,\n      telephone,\n      address\n    };\n\n    const { id } = this.props.match.params;\n\n    axios\n      .put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\n      .then(res => {\n        dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n      });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.id]: e.target.value });\n\n  render() {\n    const { name, email, telephone, address } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className=\"row\">\n              <div className=\"col s12 m6\">\n                <div className=\"card grey lighten-2\">\n                  <div className=\"section container\">\n                    <span className=\"card-title\">Update Contact</span>\n                  </div>\n\n                  <div className=\"card-content\">\n                    <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\n                      <div className=\"row\">\n                        <div className=\"input-field col s12\">\n                          <input\n                            id=\"name\"\n                            type=\"text\"\n                            className=\"validate\"\n                            value={name}\n                            onChange={this.onChange}\n                            required\n                          />\n                          <label htmlFor=\"name\">First Name</label>\n                        </div>\n                        <div className=\"input-field col s12\">\n                          <input\n                            id=\"email\"\n                            type=\"email\"\n                            className=\"validate\"\n                            value={email}\n                            onChange={this.onChange}\n                            required\n                          />\n                          <label htmlFor=\"email\">Email</label>\n                        </div>\n                        <div className=\"input-field col s12\">\n                          <input\n                            id=\"telephone\"\n                            type=\"text\"\n                            className=\"validate\"\n                            value={telephone}\n                            onChange={this.onChange}\n                            required\n                          />\n                          <label htmlFor=\"telephone\">Phone</label>\n                        </div>\n                        <div className=\"input-field col s12\">\n                          <input\n                            id=\"address\"\n                            type=\"text\"\n                            className=\"validate\"\n                            value={address}\n                            onChange={this.onChange}\n                            required\n                          />\n                          <label htmlFor=\"address\">Address</label>\n                        </div>\n                      </div>\n                      <input\n                        type=\"submit\"\n                        value=\"Update Contact\"\n                        className=\"btn\"\n                      />\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Header() {\n  return (\n    <div>\n      <nav className=\"red\">\n        <div className=\"nav-wrapper\">\n          <Link href=\"/firstReactApp\" className=\"brand-logo\">\n            ContactManager\n          </Link>\n          <ul id=\"nav-mobile\">\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/contact/add\">Add</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h3 className=\"center\">About Contact Manager</h3>\n      <p className=\"center\">\n        This is a simple app made with a not so simple framework\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h3 className=\"center\">\n        <span className=\"red-text\">404 </span>Page Not Found\n      </h3>\n      <div className=\"container\">\n        <h6 className=\"center\">\n          Sorry, that page does not seem to exist.\n        </h6>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/layout/About\";\nimport NotFound from \"./components/layout/NotFound\";\nimport { Provider } from \"./Context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header />\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}